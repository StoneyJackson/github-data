"""Restore strategy for {{ entity_name }}.

This file was auto-generated by src/tools/generate_entity.py
You MUST implement the execute() method for your specific entity.
"""
from typing import List
from pathlib import Path
from src.operations.restore.base_restore_strategy import BaseRestoreStrategy
from src.services.github_service import GitHubService
from .models import {{ model_class_name }}


class {{ restore_strategy_class }}(BaseRestoreStrategy):
    """Restore strategy for {{ entity_name }}.

    This strategy handles restoring {{ entity_name }} data from local
    JSON files to GitHub.
    """

    def __init__(
        self,
        github_service: GitHubService,
        data_path: Path,
        entity_config: "EntityConfig"
    ):
        """Initialize the restore strategy.

        Args:
            github_service: GitHub API service for data restoration
            data_path: Base path for reading data files
            entity_config: Configuration for this entity
        """
        super().__init__(github_service, data_path, entity_config)

    def execute(self) -> None:
        """Execute the restore operation for {{ entity_name }}.

        TODO: Implement this method to:
        1. Load {{ entity_name }} data from JSON using self.load_from_json()
        2. Validate data
        3. Restore to GitHub using self.github_service
        4. Handle conflicts and errors

        Example:
            # Load data
            models = self.load_from_json("{{ entity_name }}.json", {{ model_class_name }})

            # Restore each item
            for model in models:
                try:
                    self.github_service.create_{{ entity_name }}(model)
                except Exception as e:
                    self.handle_error(model, e)
        """
        raise NotImplementedError(
            "You must implement execute() method for {{ restore_strategy_class }}"
        )
