"""Restore strategy for {{ entity_name }}.

This file was auto-generated by src/tools/generate_entity.py
You MUST implement the execute() method for your specific entity.
"""
from typing import List{% if 'git_service' in restore_services or 'conflict_strategy' in restore_services %}, Any{% endif %}

from pathlib import Path
from src.operations.restore.base_restore_strategy import BaseRestoreStrategy
{% if 'github_service' in restore_services %}
from src.services.github_service import GitHubService
{% endif %}
{% if 'git_service' in restore_services %}
from src.git.service import GitRepositoryService
{% endif %}
from .models import {{ model_class_name }}


class {{ restore_strategy_class }}(BaseRestoreStrategy):
    """Restore strategy for {{ entity_name }}.

    This strategy handles restoring {{ entity_name }} data from local
    JSON files to GitHub.
    """

    def __init__(
        self,
{%- if restore_services %}
{%- for service in restore_services %}
{%- if service == 'github_service' %}
        {{ service }}: GitHubService,
{%- elif service == 'git_service' %}
        {{ service }}: GitRepositoryService,
{%- else %}
        {{ service }}: Any,
{%- endif %}
{%- endfor %}
{%- endif %}
        data_path: Path,
        entity_config: "EntityConfig"
    ):
        """Initialize the restore strategy.

        Args:
{%- if restore_services %}
{%- for service in restore_services %}
            {{ service }}: {{ service_descriptions.get(service, 'Service instance') }}
{%- endfor %}
{%- endif %}
            data_path: Base path for reading data files
            entity_config: Configuration for this entity
        """
        super().__init__({% if 'github_service' in restore_services %}github_service, {% endif %}data_path, entity_config)
{%- for service in restore_services %}
{%- if service != 'github_service' %}
        self.{{ service }} = {{ service }}
{%- endif %}
{%- endfor %}

    def execute(self) -> None:
        """Execute the restore operation for {{ entity_name }}.

        TODO: Implement this method to:
        1. Load {{ entity_name }} data from JSON using self.load_from_json()
        2. Validate data
        3. Restore to GitHub using self.github_service
        4. Handle conflicts and errors

        Example:
            # Load data
            models = self.load_from_json("{{ entity_name }}.json", {{ model_class_name }})

            # Restore each item
            for model in models:
                try:
                    self.github_service.create_{{ entity_name }}(model)
                except Exception as e:
                    self.handle_error(model, e)
        """
        raise NotImplementedError(
            "You must implement execute() method for {{ restore_strategy_class }}"
        )
