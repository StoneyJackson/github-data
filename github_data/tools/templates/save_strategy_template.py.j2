"""Save strategy for {{ entity_name }}.

This file was auto-generated by src/tools/generate_entity.py
You MUST implement the execute() method for your specific entity.
"""
from typing import List{% if 'git_service' in save_services or 'conflict_strategy' in save_services %}, Any{% endif %}

from pathlib import Path
from src.operations.save.base_save_strategy import BaseSaveStrategy
{% if 'github_service' in save_services %}
from src.services.github_service import GitHubService
{% endif %}
{% if 'git_service' in save_services %}
from src.git.service import GitRepositoryService
{% endif %}
from .models import {{ model_class_name }}


class {{ save_strategy_class }}(BaseSaveStrategy):
    """Save strategy for {{ entity_name }}.

    This strategy handles saving {{ entity_name }} data from GitHub
    to local JSON files.
    """

    def __init__(
        self,
{%- if save_services %}
{%- for service in save_services %}
{%- if service == 'github_service' %}
        {{ service }}: GitHubService,
{%- elif service == 'git_service' %}
        {{ service }}: GitRepositoryService,
{%- else %}
        {{ service }}: Any,
{%- endif %}
{%- endfor %}
{%- endif %}
        data_path: Path,
        entity_config: "EntityConfig"
    ):
        """Initialize the save strategy.

        Args:
{%- if save_services %}
{%- for service in save_services %}
            {{ service }}: {{ service_descriptions.get(service, 'Service instance') }}
{%- endfor %}
{%- endif %}
            data_path: Base path for saving data files
            entity_config: Configuration for this entity
        """
        super().__init__({% if 'github_service' in save_services %}github_service, {% endif %}data_path, entity_config)
{%- for service in save_services %}
{%- if service != 'github_service' %}
        self.{{ service }} = {{ service }}
{%- endif %}
{%- endfor %}

    def execute(self) -> None:
        """Execute the save operation for {{ entity_name }}.

        TODO: Implement this method to:
        1. Fetch {{ entity_name }} data from GitHub using self.github_service
        2. Transform data into {{ model_class_name }} instances
        3. Validate data
        4. Save to JSON file using self.save_to_json()

        Example:
            # Fetch data
            raw_data = self.github_service.fetch_{{ entity_name }}()

            # Transform
            models = [{{ model_class_name }}(**item) for item in raw_data]

            # Save
            self.save_to_json(models, "{{ entity_name }}.json")
        """
        raise NotImplementedError(
            "You must implement execute() method for {{ save_strategy_class }}"
        )
