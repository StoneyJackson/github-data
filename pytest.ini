[pytest]
# Test discovery configuration
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Enhanced output and reporting options
addopts = 
    --cov-report=term-missing 
    --cov-report=html 
    --tb=short
    --strict-markers
    --strict-config
    --verbose

# Comprehensive marker definitions
markers =
    # Basic test categories
    unit: marks tests as unit tests (deselect with '-m "not unit"')
    integration: marks tests as integration tests (deselect with '-m "not integration"')
    container: marks tests as container integration tests (deselect with '-m "not container"')
    slow: marks tests as slow (deselect with '-m "not slow"')
    docker: marks tests as requiring Docker (deselect with '-m "not docker"')
    
    # Feature-specific categories
    labels: marks tests as label-related (deselect with '-m "not labels"')
    issues: marks tests as issue-related (deselect with '-m "not issues"')
    comments: marks tests as comment-related (deselect with '-m "not comments"')
    errors: marks tests as error handling (deselect with '-m "not errors"')
    
    # Enhanced fixture categories
    enhanced_fixtures: marks tests using enhanced fixture patterns
    data_builders: marks tests using dynamic data builder fixtures
    error_simulation: marks tests using error simulation fixtures
    workflow_services: marks tests using workflow service fixtures
    performance_fixtures: marks tests using performance monitoring fixtures
    
    # Performance and complexity markers
    fast: marks tests as fast running (< 100ms)
    medium: marks tests as medium running (100ms - 1s)
    performance: marks tests as performance testing and benchmarking
    memory_intensive: marks tests with high memory usage
    
    # GitHub API scenario markers
    empty_repository: marks tests with empty repository scenarios
    large_dataset: marks tests with large dataset scenarios
    rate_limiting: marks tests involving rate limiting scenarios
    api_errors: marks tests simulating GitHub API errors
    
    # Workflow-specific markers
    backup_workflow: marks backup workflow tests
    restore_workflow: marks restore workflow tests
    sync_workflow: marks sync workflow tests
    validation_workflow: marks data validation workflow tests
    
    # Data complexity markers
    simple_data: marks tests with simple data structures
    complex_hierarchy: marks tests with complex hierarchical data
    temporal_data: marks tests with time-sensitive data patterns
    mixed_states: marks tests with mixed state data

# Enhanced filter warnings
filterwarnings =
    ignore::pytest.PytestUnraisableExceptionWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Performance settings
timeout = 300
minversion = 6.0

[coverage:run]
branch = true
source = src
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
skip_covered = true
show_missing = true
precision = 2

[coverage:html]
directory = htmlcov
title = GitHub Data Test Coverage
